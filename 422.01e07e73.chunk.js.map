{"version":3,"file":"422.01e07e73.chunk.js","mappings":"iNAGA,MAAMA,EAAM,IAAIC,EAAAA,QACVC,EAAO,IAAID,EAAAA,QACXE,EAAQ,IAAIF,EAAAA,QCAH,SAASG,IACtB,MAAMC,GAAOC,EAAAA,EAAAA,GAAQ,sBACfC,GAAMD,EAAAA,EAAAA,GAAQ,oBDCP,IAAoBE,ECmBjC,ODnBiCA,ECCtBD,EAAIE,ODAfC,EAAAA,EAAAA,IAAS,IAAgB,IAAf,OAAEC,GAAQ,EAClB,MAAMC,EAAWC,UAAUC,cAC3B,IAAK,MAAMC,KAAWH,EAAU,CAC9B,GAAgB,OAAZG,EAAkB,SACtB,IAAKA,EAAQC,UAAW,SACxB,MAAOC,EAAGC,GAAKH,EAAQI,SAEhBC,EAAGC,GAAKN,EAAQO,KACvB,GAAY,IAANF,GAAiB,IAANC,EAAU,CACzB,MAAME,GAAKtB,EAAAA,UAAAA,SAAyBuB,KAAKC,MAAMJ,EAAGD,IAAM,IAAM,IAAM,IACpEZ,EAAMkB,SAASL,EAAIpB,EAAAA,UAAAA,UAA8B,EAALsB,EAC9C,CAEAf,EAAMmB,iBAAiB3B,GAEvBG,EAAMyB,IAAI,EAAG,EAAGX,EAAEY,QAAU,EAAIX,EAAEW,SAAW,EAAI,GACjDrB,EAAMsB,WAAW3B,EAAM4B,eAnBf,KAmBqCC,GAE7CxB,EAAMmB,iBAAiBzB,GAEvB,MAAM+B,EAAQ/B,EAAKgC,QAAQC,IAAInC,GAC/BW,EAAOyB,OAAO5B,EAAM6B,UACpB1B,EAAO0B,SAASC,IAAIL,EACtB,KCrBFM,EAAAA,WAAgB,KACd,MACMC,GADM,IAAIvC,EAAAA,MAAawC,cAAcpC,EAAKI,OAC7BiC,UAAU,IAAIzC,EAAAA,SACjCI,EAAKI,MAAM4B,SAASjB,GAAKf,EAAKI,MAAM4B,SAASjB,EAAIoB,EAAOpB,EACxDf,EAAKI,MAAM4B,SAAShB,GAAKhB,EAAKI,MAAM4B,SAAShB,EAAImB,EAAOnB,EACxDhB,EAAKI,MAAM4B,SAASL,GAAK3B,EAAKI,MAAM4B,SAASL,EAAIQ,EAAOR,EACxD3B,EAAKI,MAAM4B,SAAShB,GAAK,KACzBhB,EAAKI,MAAMkC,UAAUC,IACfA,aAAkB3C,EAAAA,MAChB2C,EAAOC,oBAAoB5C,EAAAA,uBAC7B2C,EAAOC,SAASC,gBAAkB,GAEtC,GACA,GACD,CAACzC,EAAKI,QAGP,gCACE,gBAACsC,EAAA,GAAW,CAACC,MAAM,6BACnB,6BAAWJ,OAAQvC,EAAKI,MAAOwC,MAAO,MACtC,6BACEL,OAAQrC,EAAIE,MACZ,aAAYR,EAAAA,UAAAA,SAAyB,KACrCgD,MAAO,MAIf,CCjCe,SAASC,IACtB,OACE,gBAAC,KAAM,CAACC,MAAI,EAACC,QAAM,EAACC,QAAM,GACxB,gBAACC,EAAA,EAAa,CAACC,aAAW,IAC1B,gBAACC,EAAA,EAAiB,CAACD,aAAW,EAAClB,SAAU,CAAC,EAAG,EAAG,MAChD,gBAACjC,EAAM,MAGb,CCVe,SAASqD,IACtB,OAAO,gBAACP,EAAI,KACd,C","sources":["webpack:///./src/game/hooks/use-gamepad.ts","webpack:///./src/game/components/player.tsx","webpack:///./src/game/game.tsx","webpack:///./src/pages/home/home.tsx"],"sourcesContent":["import * as THREE from \"three\";\nimport { useFrame } from \"@react-three/fiber\";\n\nconst pos = new THREE.Vector3();\nconst pos2 = new THREE.Vector3();\nconst force = new THREE.Vector3();\nconst speed = 0.05;\n\nexport default function useGamepad(group: THREE.Group) {\n  useFrame(({ camera }) => {\n    const gamepads = navigator.getGamepads();\n    for (const gamepad of gamepads) {\n      if (gamepad === null) continue;\n      if (!gamepad.connected) continue;\n      const [a, b] = gamepad.buttons;\n\n      const [x, y] = gamepad.axes;\n      if (!(x === 0 && y === 0)) {\n        const r = (THREE.MathUtils.radToDeg(Math.atan2(y, x)) + 360 - 90) % 360;\n        group.rotation.y = THREE.MathUtils.degToRad(r * -1);\n      }\n\n      group.getWorldPosition(pos);\n\n      force.set(0, 0, a.pressed ? 1 : b.pressed ? -1 : 0);\n      group.translateZ(force.multiplyScalar(speed).z);\n\n      group.getWorldPosition(pos2);\n\n      const delta = pos2.clone().sub(pos);\n      camera.lookAt(group.position);\n      camera.position.add(delta);\n    }\n  });\n}\n","import React from \"react\";\nimport * as THREE from \"three\";\nimport { Environment, useGLTF } from \"@react-three/drei\";\nimport useGamepad from \"@/game/hooks/use-gamepad\";\n\nexport default function Player() {\n  const city = useGLTF(\"./assets/city.gltf\");\n  const car = useGLTF(\"./assets/car.glb\");\n\n  useGamepad(car.scene);\n\n  React.useEffect(() => {\n    const box = new THREE.Box3().setFromObject(city.scene);\n    const center = box.getCenter(new THREE.Vector3());\n    city.scene.position.x += city.scene.position.x - center.x;\n    city.scene.position.y += city.scene.position.y - center.y;\n    city.scene.position.z += city.scene.position.z - center.z;\n    city.scene.position.y += 1.35;\n    city.scene.traverse((object) => {\n      if (object instanceof THREE.Mesh) {\n        if (object.material instanceof THREE.MeshStandardMaterial) {\n          object.material.envMapIntensity = 0.6;\n        }\n      }\n    });\n  }, [city.scene]);\n\n  return (\n    <>\n      <Environment files=\"./assets/environment.hdr\" />\n      <primitive object={city.scene} scale={0.01} />\n      <primitive\n        object={car.scene}\n        rotation-y={THREE.MathUtils.degToRad(180)}\n        scale={0.75}\n      />\n    </>\n  );\n}\n","import React from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { OrbitControls, PerspectiveCamera } from \"@react-three/drei\";\nimport Player from \"@/game/components/player\";\n\nexport default function Game() {\n  return (\n    <Canvas flat linear legacy>\n      <OrbitControls makeDefault />\n      <PerspectiveCamera makeDefault position={[0, 5, 10]} />\n      <Player />\n    </Canvas>\n  );\n}\n","import React from \"react\";\nimport Game from \"@/game/game\";\n\nexport default function Home() {\n  return <Game />;\n}\n"],"names":["pos","THREE","pos2","force","Player","city","useGLTF","car","group","scene","useFrame","camera","gamepads","navigator","getGamepads","gamepad","connected","a","b","buttons","x","y","axes","r","Math","atan2","rotation","getWorldPosition","set","pressed","translateZ","multiplyScalar","z","delta","clone","sub","lookAt","position","add","React","center","setFromObject","getCenter","traverse","object","material","envMapIntensity","Environment","files","scale","Game","flat","linear","legacy","OrbitControls","makeDefault","PerspectiveCamera","Home"],"sourceRoot":""}